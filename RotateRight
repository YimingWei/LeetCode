# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head, k: int) -> ListNode:
        if not head or not head.next: 
            return head
        cur = head
        length = 0
        while cur:
            cur = cur.next
            length = length + 1
        k = k % length
        if k == 0: 
            return head
        fast, slow = head, head
        while k:
            fast = fast.next
            k = k - 1
        while fast.next:
            fast = fast.next
            slow = slow.next
        newHead = slow.next
        slow.next = None
        fast.next = head
        return newHead
